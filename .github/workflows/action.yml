name: Build and Deploy Qt6 Project

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [windows-latest, ubuntu-latest, macos-latest]
        os: [windows-latest]
#        arch: [x64, arm64]
        arch: [x64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version
        id: extract_version
        run: |
          if ($env:RUNNER_OS -eq 'Windows') {
            $full_version = (Select-String -Path VDVGE.pro -Pattern 'win32:VERSION = (\d+\.\d+\.\d+\.\d+)').Matches.Value
            $version = $full_version -replace '\.\d+$'
            echo "VERSION=$version" >> $env:GITHUB_ENV
          }
          else {
            $version = (grep -Po '(?<=else:VERSION = ).*' VDVGE.pro)
            echo "VERSION=$version" >> $GITHUB_ENV
          }

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.*'
          host: ${{ matrix.os }}
          target: desktop
          arch: ${{ matrix.arch }}
          modules: qtbase,qtgui,qtopengl,qtwidgets,qt5compat

      - name: Build project
        run: |
          qmake VDVGE.pro
          make

#      - name: Build RPM package
#        if: matrix.os == 'ubuntu-latest'
#        run: |
#          sudo apt-get install -y rpm
#          mkdir -p rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
#          cp VDVGE.spec rpmbuild/SPECS/
#          tar czf rpmbuild/SOURCES/VDVGE-${{ env.VERSION }}.tar.gz *
#          rpmbuild -ba rpmbuild/SPECS/VDVGE.spec

      - name: Deploy (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          windeployqt --release build\your_executable.exe
          powershell Compress-Archive -Path build\* -DestinationPath vdvge-${{ env.VERSION }}-qt6-windows-x64.zip
          scp vdvge-${{ env.VERSION }}-qt6-windows-x64.zip user@yourserver:/path/to/deploy

#      - name: Deploy (Linux)
#        if: matrix.os == 'ubuntu-latest'
#        run: |
#          mv rpmbuild/RPMS/x86_64/VDVGE-1.0-1.x86_64.rpm rpmbuild/RPMS/x86_64/vdvge-${{ env.VERSION }}-qt6-linux-x64.rpm
#          scp rpmbuild/RPMS/x86_64/vdvge-${{ env.VERSION }}-qt6-linux-x64.rpm user@yourserver:/path/to/deploy

#      - name: Deploy (MacOS)
#        if: matrix.os == 'macos-latest'
#        run: |
#          macdeployqt build/your_executable.app -dmg
#          mv build/your_executable.dmg vdvge-${{ env.VERSION }}-qt6-macos-x64.dmg
#          scp vdvge-${{ env.VERSION }}-qt6-macos-x64.dmg user@yourserver:/path/to/deploy
