name: Build and Deploy Qt6 Project

on:
  push:
    branches:
      - main

jobs:
  windows:
    runs-on: windows-2019
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Developer Command Prompt for Microsoft Visual C++
        uses: ilammy/msvc-dev-cmd@v1

      - name: Extract version number
        id: extract_version
        run: |
          $full_version = (Select-String -Path VDVGE.pro -Pattern 'win32:VERSION = (\d+\.\d+\.\d+\.\d+)' | ForEach-Object { $_.Matches[0].Groups[1].Value })
          $version = $full_version -replace '\.\d+$'
          echo "VERSION=$version" >> $env:GITHUB_ENV

      - name: Print extracted version number
        run: |
           echo "VERSION=${{ env.VERSION }}"

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          aqtversion: '==3.1.*'
          version: '6.8.0'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2022_64'
          modules: 'qt5compat'

      - name: Build project
        run: |
          qmake6 -spec win32-msvc
          nmake

      - name: Deploy (Windows)
        run: |
          windeployqt --release build\vdvge.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vdvge-${{ env.VERSION }}-qt6-windows-x64
          path: |
            build/*

  mac:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version number
        id: extract_version
        run: |
          version=$(sed -n 's/^else:VERSION = //p' VDVGE.pro)
          echo "Extracted version: $version"
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Print extracted version number
        run: |
           echo "VERSION=${{ env.VERSION }}"

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          aqtversion: '==3.1.*'
          version: '6.8.0'
          host: 'mac'
          target: 'desktop'
          arch: 'clang_64'
          modules: 'qt5compat'

      - name: Build project
        run: |
          qmake -spec macx-xcode
          xcodebuild -project VDVGE.xcodeproj

      - name: Check the target platform of the built binary
        run: |
          file build/vdvge.app/Contents/MacOS/vdvge
  
      - name: Deploy
        run: |
          macdeployqt build/vdvge.app -dmg
          mv build/vdvge.dmg build/vdvge-${{ env.VERSION }}-qt6-macos.dmg

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vdvge-${{ env.VERSION }}-qt6-macos
          path: |
            build/*.dmg

  ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version number
        id: extract_version
        run: |
          version=$(grep -Po '(?<=else:VERSION = ).*' VDVGE.pro)
          echo "Extracted version: $version"
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Print extracted version number
        run: |
           echo "VERSION=${{ env.VERSION }}"

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          aqtversion: '==3.1.*'
          version: '6.8.0'
          host: 'linux'
          target: 'desktop'
          arch: 'linux_gcc_64'
          modules: 'qt5compat'

      - name: Install Libraries
        run: sudo apt-get install -y libglu1-mesa-dev

      - name: Build RPM package
        run: |
          sudo apt-get install -y rpm
          mkdir -p rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS,TMP_SOURCES}
          mv vdvge.spec rpmbuild/SPECS/
          rsync -a --exclude='rpmbuild' ./ rpmbuild/TMP_SOURCES/vdvge-${{ env.VERSION }}/
          (cd rpmbuild/SOURCES && tar czf vdvge-${{ env.VERSION }}.tar.gz -C ../TMP_SOURCES .)
          rpmbuild -ba --define "_sourcedir $(pwd)/rpmbuild/SOURCES" rpmbuild/SPECS/vdvge.spec

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vdvge-${{ env.VERSION }}-qt6-ubuntu-x64
          path: |
            /home/runner/rpmbuild/RPMS/*
            /home/runner/rpmbuild/SRPMS/*
